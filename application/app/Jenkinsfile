pipeline {
    agent any

    tools {
        nodejs "node"
        dockerTool "docker"
    }
    
    environment {
        MONGODB_URI = ''
        DOCKER_HUB_REPO = 'abdurrafae/todoapp'
        DOCKER_TAG = 'latest'
    }
    
    stages {
        stage('Set MongoDB URI') {
            steps {
                withCredentials([string(credentialsId: 'MONGODB_URI', variable: 'MONGODB_URI')]) {
                    script {
                        env.MONGODB_URI = MONGODB_URI
                    }
                }
            }
        }
        stage('Build') {
            steps {
                dir('./application/app') {
                    sh 'npm install'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('./application') {
                    sh 'docker build -t $DOCKER_HUB_REPO:$DOCKER_TAG .'
                }
            }
        }
        stage('Tag Docker Image') {
            steps {
                sh "docker tag $DOCKER_HUB_REPO:$DOCKER_TAG $DOCKER_HUB_REPO:$DOCKER_TAG"
            }
        }
        stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockercred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                    sh "docker push $DOCKER_HUB_REPO:$DOCKER_TAG"
                }
            }
        }
        // stage('Deploy to Minikube') {
        //     steps {
        //         sh 'kubectl apply -f k8/'
        //     }
        // }
    }
}

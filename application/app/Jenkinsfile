pipeline {
    agent any

    tools {
        nodejs "node"
        dockerTool "docker"
    }
    
    environment {
        MONGODB_URI = ''
        DOCKER_HUB_REPO = 'abdurrafae/todoapp'
        DOCKER_TAG = 'latest'
        K8S_CREDENTIALS_ID = 'k8secret'
        K8S_SERVER_URL = 'https://127.0.0.1:61399'
        SECRET_DATA = credentials('k8secretyaml') 
    }
    
    stages {
        stage('Set MongoDB URI') {
            steps {
                withCredentials([string(credentialsId: 'MONGODB_URI', variable: 'MONGODB_URI')]) {
                    script {
                        env.MONGODB_URI = MONGODB_URI
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    dir('./application/app') {
                        bat 'npm install'
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_HUB_REPO}:${DOCKER_TAG}", './application')
                }
            }
        }
        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockercred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        docker.withRegistry('https://index.docker.io/v1/', 'dockercred') {
                            docker.image("${DOCKER_HUB_REPO}:${DOCKER_TAG}").push()
                        }
                    }
                }
            }
        }
        stage('Apply Secret File') {
            steps {
                script {
                    writeFile file: "app-secret.yaml", text: SECRET_DATA
                }
            }
        }
        stage('Deploy to Minikube') {
            steps {
                script {
                    kubeconfig(credentialsId: "${env.K8S_CREDENTIALS_ID}", serverUrl: "${env.K8S_SERVER_URL}") {
                        bat 'kubectl apply -f k8/web-application.yaml -n jenkins'
                    }
                }
            }
        }
    }
}

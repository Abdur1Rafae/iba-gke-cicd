pipeline {
    agent any

    tools {
        nodejs "node"
        dockerTool "docker"
    }
    
    environment {
        MONGODB_URI = ''
        DOCKER_HUB_REPO = 'abdurrafae/todoapp'
        DOCKER_TAG = 'latest'
    }
    
    stages {
        stage('Set MongoDB URI') {
            steps {
                withCredentials([string(credentialsId: 'MONGODB_URI', variable: 'MONGODB_URI')]) {
                    script {
                        env.MONGODB_URI = MONGODB_URI
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    // Change to the directory containing package.json
                    dir('./application/app') {
                        // Use 'npm.cmd' on Windows
                        bat 'npm install'
                    }
                }
            }
        }
        // stage('Build Docker Image') {
        //     steps {
        //         script {
        //             docker.build("${DOCKER_HUB_REPO}:${DOCKER_TAG}", './application')
        //         }
        //     }
        // }
        // stage('Push Docker Image to Docker Hub') {
        //     steps {
        //         script {
        //             withCredentials([usernamePassword(credentialsId: 'dockercred', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
        //                 docker.withRegistry('https://index.docker.io/v1/', 'dockercred') {
        //                     docker.image("${DOCKER_HUB_REPO}:${DOCKER_TAG}").push()
        //                 }
        //             }
        //         }
        //     }
        // }
        // stage('Deploy to Minikube') {
        //     steps {
        //         kubeconfig(credentialsId: 'k8cred', serverUrl: '') {
        //             sh 'kubectl apply -f k8/'
        //         }
        //     }
        // }
    }
}
